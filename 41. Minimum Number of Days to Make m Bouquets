class Solution:
    def numberOfBouquets(self, bloomDay: List[int], mid: int, k: int) -> int:
        c = 0
        num = 0
        for e in bloomDay:
            if e<=mid:
                c += 1
            else:
                num += (c//k)
                c = 0
        num += (c//k)
        return num

    def minDays(self, bloomDay: List[int], m: int, k: int) -> int:
        if (m*k)>len(bloomDay):
            return -1
        l = min(bloomDay)
        r = max(bloomDay)
        while l<=r:
            mid = (l+r)//2
            n = self.numberOfBouquets(bloomDay, mid, k)
            if n>=m:
                r = mid - 1
            else:
                l = mid + 1

        return l



        
