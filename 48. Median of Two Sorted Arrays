class Solution:
    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -> float:

        n1 = len(nums1)
        n2 = len(nums2)
        n = n1+n2
        ind2 = n//2
        ind1 = ind2 - 1
        co = 0
        ind1el = ind2el = -1
        i = j = 0

        while(i<n1 and j<n2):
            if (nums1[i] < nums2[j]):
                if co==ind1:
                    ind1el = nums1[i]
                if co==ind2:
                    ind2el = nums1[i]
                co += 1
                i += 1
            else:
                if co==ind1:
                    ind1el = nums2[j]
                if co==ind2:
                    ind2el = nums2[j]
                co += 1
                j += 1
        
        while (i<n1):
            if co==ind1:
                ind1el = nums1[i]
            if co==ind2:
                ind2el = nums1[i]
            co += 1
            i += 1
        
        while (j<n2):
            if co==ind1:
                ind1el = nums2[j]
            if co==ind2:
                ind2el = nums2[j]
            co += 1
            j += 1
        
        if (n%2==1):
            return ind2el
        else:
            return (ind1el + ind2el)/2



        
